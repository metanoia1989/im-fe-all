<template>
	<view class="main">
		<uni-nav-bar
      :leftIconBool="true"
      @clickLeft="$tools.back()"
      left-icon="back"
      :fixed="true"
      :status-bar="true"
      @clickRight="queryUsers"
      right-text="添加朋友"
      title="新的朋友"
      :rightIconBool="true"
      background-color="#ebebeb"
      titleStyle="font-size: 34rpx; font-weight: 500;">
    </uni-nav-bar>

		<uni-list>
			<!-- #ifdef APP-NVUE -->
			<cell class="line"></cell>
			<!-- #endif -->


      <apply-item :apply="apply" v-for="apply of applyList" :key="apply.id" @click="onClick(apply)"></apply-item>

			<!-- #ifdef APP-NVUE -->
			<cell class="fixedView" :style="{ bottom : tabbarHeight + 'rpx'}"></cell>
			<!-- #endif -->
			<!-- #ifndef APP-NVUE -->
			<view class="fixedView" :style="{ bottom : tabbarHeight + 'rpx'}"></view>
			<!-- #endif -->

		</uni-list>

		<uni-popup ref="popup" type="bottom">
			<view class="popup" :style="'padding-bottom:'+safeBottom+'rpx'">
				<view class="success">
					<view class="button" @click="onSelect(true)">
						<text class="button-text">通过</text>
					</view>
				</view>
				<view class="delete">
					<view class="button" @click="onSelect(false)">
						<text class="button-text">拒绝</text>
					</view>
				</view>
				<view class="line"></view>
				<view class="delete">
					<view class="button" @click="hidePopup()">
						<text class="button-text" style="color: black;">取消</text>
					</view>
				</view>
			</view>
		</uni-popup>

	</view>
</template>

<script>
  import ApplyItem from './components/ApplyItem';
  import { mapGetters, mapMutations, mapActions } from 'vuex';
	export default {
    components: {
      ApplyItem
    },
		data() {
			return {
				tabbarHeight: 0,
				safeBottom:0,
				systemInfo: uni.getSystemInfoSync(),
			}
		},
		computed: {
      ...mapGetters('friend', ['applyList']),
		},
		onReady() {
			this.tabbarHeight = uni.getSystemInfoSync().windowBottom * 2;
		},
    onLoad() {
			this.safeBottom = this.systemInfo.safeAreaInsets.bottom * 2;
    },
		methods: {
      ...mapMutations('friend', ['updateApplyCount']),
      ...mapActions('friend', ['getApplies']),
      ...mapMutations('im', ['addConversation', 'activateConversation']),
			queryUsers: function() {
				uni.navigateTo({
					url: '/pages/contact/queryUsers',
				})
			},
			showPopup: function(){
				this.$refs.popup.open()
			},
			hidePopup: function(){
				this.$refs.popup.close()
			},
      onSelect(result) {
        if (this.activeApplyType === 'user') {
          this.$services.userService.applyFriend(this.activeApplyId, result);
        } else if (this.activeApplyType) {
          this.$services.userService.applyGroup(this.activeApplyId, result);
        }
        this.hidePopup();
      },
      onClick(apply) {
        this.activeApplyId = apply.id;
        this.activeApplyType = apply.type;
        this.showPopup();
      },
		}
	}
</script>

<style scoped>
	.fixedView {
		position: fixed;
		width: 750rpx;
		height: 60rpx;
		background-color: transparent;
	}

	.line {
		height: 16rpx;
		width: 750rpx;
		background-color: #ebebeb;
	}

	.clearList {
		width: 750rpx;
	}

	.popup{
		width: 750rpx;
		background-color: white;
		border-top-left-radius:30rpx;
		border-top-right-radius:30rpx;
	}

	.delPanel{
		padding: 30rpx;
		justify-content: center;
		text-align: center;
		align-items: center;
		border-bottom-width: 1px;
		border-bottom-color: #f8f8f8;
	}
	.deleted-text{
		color: gray;
		font-size: 28rpx;
	}
	.button {
		width: 750rpx;
		background-color: white;
		justify-content: center;
		align-items: center;
		border-radius: 10rpx;
	}

	.button-text {
		padding: 36rpx;
		font-size: 34rpx;
		font-weight: bold;
	}
  .delete .button-text {
		color: #fa5151;
  }
  .success .button-text {
		color: #41b883;
  }
</style>
